ARM GAS  /tmp/ccfeWloZ.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_MspInit,"ax",%progbits
  16              		.align	1
  17              		.weak	HAL_MspInit
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_MspInit:
  24              	.LFB42:
  25              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @file    stm32f0xx_hal.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   @verbatim
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ==============================================================================
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ==============================================================================
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL. 
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     The HAL contains two APIs categories:
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****          (+) HAL Initialization and de-initialization functions
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****          (+) HAL Control functions
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   @endverbatim
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @attention
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * All rights reserved.</center></h2>
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * the "License"; You may not use this file except in compliance with the
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * License. You may obtain a copy of the License at:
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *                        opensource.org/licenses/BSD-3-Clause
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
ARM GAS  /tmp/ccfeWloZ.s 			page 2


  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #include "stm32f0xx_hal.h"
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @addtogroup STM32F0xx_HAL_Driver
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL HAL
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief HAL module driver.
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private define ------------------------------------------------------------*/
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Constants HAL Private Constants
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** 
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief STM32F0xx HAL Driver version number V1.7.3
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_SUB1   (0x07U) /*!< [23:16] sub1 version */
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_SUB2   (0x03U) /*!< [15:8]  sub2 version */
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */ 
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION         ((__STM32F0xx_HAL_VERSION_MAIN << 24U)\
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_SUB1 << 16U)\
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_SUB2 << 8U )\
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_RC))
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define IDCODE_DEVID_MASK    (0x00000FFFU)
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Macros HAL Private Macros
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Exported variables ---------------------------------------------------------*/
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Variables HAL Exported Variables
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __IO uint32_t uwTick;
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Exported functions ---------------------------------------------------------*/
ARM GAS  /tmp/ccfeWloZ.s 			page 3


  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief    Initialization and de-initialization functions
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @verbatim
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****               ##### Initialization and de-initialization functions #####
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    [..]  This section provides functions allowing to:
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Initializes the Flash interface, the NVIC allocation and initial clock 
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           configuration. It initializes the systick also when timeout is needed
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           and the backup domain when enabled.
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) de-Initializes common part of the HAL.
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           Tick interrupt priority.
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              handled in milliseconds basis.
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             ISR process will be blocked. 
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****        (++) functions affecting time base configurations are declared as __Weak  
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @endverbatim
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  This function configures the Flash prefetch,
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        Configures time base source, NVIC and Low level hardware
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is called at the beginning of program after reset and before 
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       the clock configuration
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note The time base configuration is based on HSI clock when exiting from Reset.
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       Once done, time base tick start incrementing.
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       In the default implementation,Systick is used as source of time base.
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The tick variable is incremented each 1ms in its ISR.
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Configure Flash prefetch */ 
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #if (PREFETCH_ENABLE != 0)
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
ARM GAS  /tmp/ccfeWloZ.s 			page 4


 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Init the low level hardware */
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_MspInit();
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Return function status */
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function de-Initialize common part of the HAL and stops the SysTick
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        of time base.
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is optional.
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Reset of all peripherals */
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* De-Init the low level hardware */
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_MspDeInit();
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Return function status */
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Initialize the MSP.
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_MspInit(void)
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
  26              		.loc 1 189 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    */
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
  31              		.loc 1 193 0
  32              		@ sp needed
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE42:
  37              		.section	.text.HAL_MspDeInit,"ax",%progbits
ARM GAS  /tmp/ccfeWloZ.s 			page 5


  38              		.align	1
  39              		.weak	HAL_MspDeInit
  40              		.syntax unified
  41              		.code	16
  42              		.thumb_func
  43              		.fpu softvfp
  45              	HAL_MspDeInit:
  46              	.LFB43:
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  DeInitializes the MSP.
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_MspDeInit(void)
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
  47              		.loc 1 200 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    */
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
  52              		.loc 1 204 0
  53              		@ sp needed
  54 0000 7047     		bx	lr
  55              		.cfi_endproc
  56              	.LFE43:
  58              		.section	.text.HAL_DeInit,"ax",%progbits
  59              		.align	1
  60              		.global	HAL_DeInit
  61              		.syntax unified
  62              		.code	16
  63              		.thumb_func
  64              		.fpu softvfp
  66              	HAL_DeInit:
  67              	.LFB41:
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Reset of all peripherals */
  68              		.loc 1 166 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72 0000 10B5     		push	{r4, lr}
  73              	.LCFI0:
  74              		.cfi_def_cfa_offset 8
  75              		.cfi_offset 4, -8
  76              		.cfi_offset 14, -4
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  77              		.loc 1 168 0
  78 0002 074B     		ldr	r3, .L4
  79 0004 0121     		movs	r1, #1
  80 0006 4942     		rsbs	r1, r1, #0
  81 0008 1961     		str	r1, [r3, #16]
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  82              		.loc 1 169 0
  83 000a 0022     		movs	r2, #0
ARM GAS  /tmp/ccfeWloZ.s 			page 6


  84 000c 1A61     		str	r2, [r3, #16]
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  85              		.loc 1 171 0
  86 000e D960     		str	r1, [r3, #12]
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  87              		.loc 1 172 0
  88 0010 DA60     		str	r2, [r3, #12]
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
  89              		.loc 1 174 0
  90 0012 9962     		str	r1, [r3, #40]
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  91              		.loc 1 175 0
  92 0014 9A62     		str	r2, [r3, #40]
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     
  93              		.loc 1 178 0
  94 0016 FFF7FEFF 		bl	HAL_MspDeInit
  95              	.LVL0:
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  96              		.loc 1 182 0
  97 001a 0020     		movs	r0, #0
  98              		@ sp needed
  99 001c 10BD     		pop	{r4, pc}
 100              	.L5:
 101 001e C046     		.align	2
 102              	.L4:
 103 0020 00100240 		.word	1073876992
 104              		.cfi_endproc
 105              	.LFE41:
 107              		.global	__aeabi_uidiv
 108              		.section	.text.HAL_InitTick,"ax",%progbits
 109              		.align	1
 110              		.weak	HAL_InitTick
 111              		.syntax unified
 112              		.code	16
 113              		.thumb_func
 114              		.fpu softvfp
 116              	HAL_InitTick:
 117              	.LFB44:
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function configures the source of the time base. 
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated 
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        Tick interrupt priority.
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig(). 
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base. 
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals. 
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower) 
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The function is declared as __Weak  to be overwritten  in case of other
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementation  in user file.
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
ARM GAS  /tmp/ccfeWloZ.s 			page 7


 118              		.loc 1 223 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              	.LVL1:
 123 0000 10B5     		push	{r4, lr}
 124              	.LCFI1:
 125              		.cfi_def_cfa_offset 8
 126              		.cfi_offset 4, -8
 127              		.cfi_offset 14, -4
 128 0002 0400     		movs	r4, r0
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /*Configure the SysTick to have interrupt in 1ms time basis*/
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 129              		.loc 1 225 0
 130 0004 0F4B     		ldr	r3, .L11
 131 0006 1978     		ldrb	r1, [r3]
 132 0008 FA20     		movs	r0, #250
 133              	.LVL2:
 134 000a 8000     		lsls	r0, r0, #2
 135 000c FFF7FEFF 		bl	__aeabi_uidiv
 136              	.LVL3:
 137 0010 0100     		movs	r1, r0
 138 0012 0D4B     		ldr	r3, .L11+4
 139 0014 1868     		ldr	r0, [r3]
 140 0016 FFF7FEFF 		bl	__aeabi_uidiv
 141              	.LVL4:
 142 001a FFF7FEFF 		bl	HAL_SYSTICK_Config
 143              	.LVL5:
 144 001e 0028     		cmp	r0, #0
 145 0020 0DD1     		bne	.L8
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     return HAL_ERROR;
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Configure the SysTick IRQ priority */
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 146              		.loc 1 231 0
 147 0022 032C     		cmp	r4, #3
 148 0024 01D9     		bls	.L10
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     uwTickPrio = TickPriority;
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   else
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     return HAL_ERROR;
 149              		.loc 1 238 0
 150 0026 0120     		movs	r0, #1
 151 0028 0AE0     		b	.L7
 152              	.L10:
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     uwTickPrio = TickPriority;
 153              		.loc 1 233 0
 154 002a 0130     		adds	r0, r0, #1
 155 002c 0022     		movs	r2, #0
 156 002e 2100     		movs	r1, r4
 157 0030 4042     		rsbs	r0, r0, #0
 158 0032 FFF7FEFF 		bl	HAL_NVIC_SetPriority
ARM GAS  /tmp/ccfeWloZ.s 			page 8


 159              	.LVL6:
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 160              		.loc 1 234 0
 161 0036 054B     		ldr	r3, .L11+8
 162 0038 1C60     		str	r4, [r3]
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    /* Return function status */
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
 163              		.loc 1 242 0
 164 003a 0020     		movs	r0, #0
 165 003c 00E0     		b	.L7
 166              	.L8:
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 167              		.loc 1 227 0
 168 003e 0120     		movs	r0, #1
 169              	.L7:
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 170              		.loc 1 243 0
 171              		@ sp needed
 172              	.LVL7:
 173 0040 10BD     		pop	{r4, pc}
 174              	.L12:
 175 0042 C046     		.align	2
 176              	.L11:
 177 0044 00000000 		.word	.LANCHOR0
 178 0048 00000000 		.word	SystemCoreClock
 179 004c 00000000 		.word	.LANCHOR1
 180              		.cfi_endproc
 181              	.LFE44:
 183              		.section	.text.HAL_Init,"ax",%progbits
 184              		.align	1
 185              		.global	HAL_Init
 186              		.syntax unified
 187              		.code	16
 188              		.thumb_func
 189              		.fpu softvfp
 191              	HAL_Init:
 192              	.LFB40:
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Configure Flash prefetch */ 
 193              		.loc 1 142 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197 0000 10B5     		push	{r4, lr}
 198              	.LCFI2:
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 4, -8
 201              		.cfi_offset 14, -4
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 202              		.loc 1 145 0
 203 0002 064A     		ldr	r2, .L14
 204 0004 1368     		ldr	r3, [r2]
 205 0006 1021     		movs	r1, #16
 206 0008 0B43     		orrs	r3, r1
 207 000a 1360     		str	r3, [r2]
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
ARM GAS  /tmp/ccfeWloZ.s 			page 9


 208              		.loc 1 150 0
 209 000c 0020     		movs	r0, #0
 210 000e FFF7FEFF 		bl	HAL_InitTick
 211              	.LVL8:
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 212              		.loc 1 153 0
 213 0012 FFF7FEFF 		bl	HAL_MspInit
 214              	.LVL9:
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 215              		.loc 1 157 0
 216 0016 0020     		movs	r0, #0
 217              		@ sp needed
 218 0018 10BD     		pop	{r4, pc}
 219              	.L15:
 220 001a C046     		.align	2
 221              	.L14:
 222 001c 00200240 		.word	1073881088
 223              		.cfi_endproc
 224              	.LFE40:
 226              		.section	.text.HAL_IncTick,"ax",%progbits
 227              		.align	1
 228              		.weak	HAL_IncTick
 229              		.syntax unified
 230              		.code	16
 231              		.thumb_func
 232              		.fpu softvfp
 234              	HAL_IncTick:
 235              	.LFB45:
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief    HAL Control functions
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @verbatim
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                       ##### HAL Control functions #####
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]  This section provides functions allowing to:
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Provide a tick value in millisecond
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Provide a blocking delay in millisecond
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Suspend the time base source interrupt
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Resume the time base source interrupt
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the HAL API driver version
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the device identifier
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the device revision identifier
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during Sleep mode
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @endverbatim
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
ARM GAS  /tmp/ccfeWloZ.s 			page 10


 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        used as application time base.
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       in SysTick ISR.
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_IncTick(void)
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 236              		.loc 1 282 0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240              		@ link register save eliminated.
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uwTick += uwTickFreq;
 241              		.loc 1 283 0
 242 0000 034A     		ldr	r2, .L17
 243 0002 1168     		ldr	r1, [r2]
 244 0004 034B     		ldr	r3, .L17+4
 245 0006 1B78     		ldrb	r3, [r3]
 246 0008 5B18     		adds	r3, r3, r1
 247 000a 1360     		str	r3, [r2]
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 248              		.loc 1 284 0
 249              		@ sp needed
 250 000c 7047     		bx	lr
 251              	.L18:
 252 000e C046     		.align	2
 253              	.L17:
 254 0010 00000000 		.word	uwTick
 255 0014 00000000 		.word	.LANCHOR0
 256              		.cfi_endproc
 257              	.LFE45:
 259              		.section	.text.HAL_GetTick,"ax",%progbits
 260              		.align	1
 261              		.weak	HAL_GetTick
 262              		.syntax unified
 263              		.code	16
 264              		.thumb_func
 265              		.fpu softvfp
 267              	HAL_GetTick:
 268              	.LFB46:
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Provides a tick value in millisecond.
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note   This function is declared as __weak  to be overwritten  in case of other 
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval tick value
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 269              		.loc 1 293 0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 0
 272              		@ frame_needed = 0, uses_anonymous_args = 0
 273              		@ link register save eliminated.
ARM GAS  /tmp/ccfeWloZ.s 			page 11


 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return uwTick;
 274              		.loc 1 294 0
 275 0000 014B     		ldr	r3, .L20
 276 0002 1868     		ldr	r0, [r3]
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 277              		.loc 1 295 0
 278              		@ sp needed
 279 0004 7047     		bx	lr
 280              	.L21:
 281 0006 C046     		.align	2
 282              	.L20:
 283 0008 00000000 		.word	uwTick
 284              		.cfi_endproc
 285              	.LFE46:
 287              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 288              		.align	1
 289              		.global	HAL_GetTickPrio
 290              		.syntax unified
 291              		.code	16
 292              		.thumb_func
 293              		.fpu softvfp
 295              	HAL_GetTickPrio:
 296              	.LFB47:
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function returns a tick priority.
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval tick priority
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 297              		.loc 1 302 0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301              		@ link register save eliminated.
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return uwTickPrio;
 302              		.loc 1 303 0
 303 0000 014B     		ldr	r3, .L23
 304 0002 1868     		ldr	r0, [r3]
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 305              		.loc 1 304 0
 306              		@ sp needed
 307 0004 7047     		bx	lr
 308              	.L24:
 309 0006 C046     		.align	2
 310              	.L23:
 311 0008 00000000 		.word	.LANCHOR1
 312              		.cfi_endproc
 313              	.LFE47:
 315              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 316              		.align	1
 317              		.global	HAL_SetTickFreq
 318              		.syntax unified
 319              		.code	16
 320              		.thumb_func
 321              		.fpu softvfp
 323              	HAL_SetTickFreq:
ARM GAS  /tmp/ccfeWloZ.s 			page 12


 324              	.LFB48:
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief Set new tick Freq.
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval status
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 325              		.loc 1 311 0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329              	.LVL10:
 330 0000 10B5     		push	{r4, lr}
 331              	.LCFI3:
 332              		.cfi_def_cfa_offset 8
 333              		.cfi_offset 4, -8
 334              		.cfi_offset 14, -4
 335              	.LVL11:
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   if (uwTickFreq != Freq)
 336              		.loc 1 317 0
 337 0002 084B     		ldr	r3, .L28
 338 0004 1C78     		ldrb	r4, [r3]
 339 0006 8442     		cmp	r4, r0
 340 0008 09D0     		beq	.L27
 341              	.LVL12:
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     /* Back up uwTickFreq frequency */
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     prevTickFreq = uwTickFreq;
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     /* Update uwTickFreq global variable used by HAL_InitTick() */
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     uwTickFreq = Freq;
 342              		.loc 1 323 0
 343 000a 1870     		strb	r0, [r3]
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     /* Apply the new tick Freq */
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 344              		.loc 1 326 0
 345 000c 064B     		ldr	r3, .L28+4
 346 000e 1868     		ldr	r0, [r3]
 347              	.LVL13:
 348 0010 FFF7FEFF 		bl	HAL_InitTick
 349              	.LVL14:
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     if (status != HAL_OK)
 350              		.loc 1 328 0
 351 0014 0028     		cmp	r0, #0
 352 0016 03D0     		beq	.L26
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     {
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       /* Restore previous tick frequency */
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       uwTickFreq = prevTickFreq;
 353              		.loc 1 331 0
ARM GAS  /tmp/ccfeWloZ.s 			page 13


 354 0018 024B     		ldr	r3, .L28
 355 001a 1C70     		strb	r4, [r3]
 356 001c 00E0     		b	.L26
 357              	.LVL15:
 358              	.L27:
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 359              		.loc 1 312 0
 360 001e 0020     		movs	r0, #0
 361              	.LVL16:
 362              	.L26:
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     }
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return status;
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 363              		.loc 1 336 0
 364              		@ sp needed
 365 0020 10BD     		pop	{r4, pc}
 366              	.L29:
 367 0022 C046     		.align	2
 368              	.L28:
 369 0024 00000000 		.word	.LANCHOR0
 370 0028 00000000 		.word	.LANCHOR1
 371              		.cfi_endproc
 372              	.LFE48:
 374              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 375              		.align	1
 376              		.global	HAL_GetTickFreq
 377              		.syntax unified
 378              		.code	16
 379              		.thumb_func
 380              		.fpu softvfp
 382              	HAL_GetTickFreq:
 383              	.LFB49:
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief return tick frequency.
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval tick period in Hz
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 384              		.loc 1 343 0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 0
 387              		@ frame_needed = 0, uses_anonymous_args = 0
 388              		@ link register save eliminated.
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return uwTickFreq;
 389              		.loc 1 344 0
 390 0000 014B     		ldr	r3, .L31
 391 0002 1878     		ldrb	r0, [r3]
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 392              		.loc 1 345 0
 393              		@ sp needed
 394 0004 7047     		bx	lr
 395              	.L32:
 396 0006 C046     		.align	2
 397              	.L31:
ARM GAS  /tmp/ccfeWloZ.s 			page 14


 398 0008 00000000 		.word	.LANCHOR0
 399              		.cfi_endproc
 400              	.LFE49:
 402              		.section	.text.HAL_Delay,"ax",%progbits
 403              		.align	1
 404              		.weak	HAL_Delay
 405              		.syntax unified
 406              		.code	16
 407              		.thumb_func
 408              		.fpu softvfp
 410              	HAL_Delay:
 411              	.LFB50:
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function provides accurate delay (in milliseconds) based 
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        on variable incremented.
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is incremented.
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note ThiS function is declared as __weak to be overwritten in case of other
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @param Delay specifies the delay time length, in milliseconds.
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 412              		.loc 1 359 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416              	.LVL17:
 417 0000 70B5     		push	{r4, r5, r6, lr}
 418              	.LCFI4:
 419              		.cfi_def_cfa_offset 16
 420              		.cfi_offset 4, -16
 421              		.cfi_offset 5, -12
 422              		.cfi_offset 6, -8
 423              		.cfi_offset 14, -4
 424 0002 0400     		movs	r4, r0
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 425              		.loc 1 360 0
 426 0004 FFF7FEFF 		bl	HAL_GetTick
 427              	.LVL18:
 428 0008 0500     		movs	r5, r0
 429              	.LVL19:
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uint32_t wait = Delay;
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 430              		.loc 1 364 0
 431 000a 631C     		adds	r3, r4, #1
 432 000c 02D0     		beq	.L35
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 433              		.loc 1 366 0
 434 000e 044B     		ldr	r3, .L36
 435 0010 1B78     		ldrb	r3, [r3]
ARM GAS  /tmp/ccfeWloZ.s 			page 15


 436 0012 E418     		adds	r4, r4, r3
 437              	.LVL20:
 438              	.L35:
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   while((HAL_GetTick() - tickstart) < wait)
 439              		.loc 1 369 0 discriminator 1
 440 0014 FFF7FEFF 		bl	HAL_GetTick
 441              	.LVL21:
 442 0018 401B     		subs	r0, r0, r5
 443 001a A042     		cmp	r0, r4
 444 001c FAD3     		bcc	.L35
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 445              		.loc 1 372 0
 446              		@ sp needed
 447              	.LVL22:
 448              	.LVL23:
 449 001e 70BD     		pop	{r4, r5, r6, pc}
 450              	.L37:
 451              		.align	2
 452              	.L36:
 453 0020 00000000 		.word	.LANCHOR0
 454              		.cfi_endproc
 455              	.LFE50:
 457              		.section	.text.HAL_SuspendTick,"ax",%progbits
 458              		.align	1
 459              		.weak	HAL_SuspendTick
 460              		.syntax unified
 461              		.code	16
 462              		.thumb_func
 463              		.fpu softvfp
 465              	HAL_SuspendTick:
 466              	.LFB51:
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief Suspend Tick increment.
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is called, the the SysTick interrupt will be disabled and so Tick increment 
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is suspended.
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_SuspendTick(void)
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 467              		.loc 1 386 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 0, uses_anonymous_args = 0
 471              		@ link register save eliminated.
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Disable SysTick Interrupt */
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 472              		.loc 1 388 0
ARM GAS  /tmp/ccfeWloZ.s 			page 16


 473 0000 024A     		ldr	r2, .L39
 474 0002 1368     		ldr	r3, [r2]
 475 0004 0221     		movs	r1, #2
 476 0006 8B43     		bics	r3, r1
 477 0008 1360     		str	r3, [r2]
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 478              		.loc 1 389 0
 479              		@ sp needed
 480 000a 7047     		bx	lr
 481              	.L40:
 482              		.align	2
 483              	.L39:
 484 000c 10E000E0 		.word	-536813552
 485              		.cfi_endproc
 486              	.LFE51:
 488              		.section	.text.HAL_ResumeTick,"ax",%progbits
 489              		.align	1
 490              		.weak	HAL_ResumeTick
 491              		.syntax unified
 492              		.code	16
 493              		.thumb_func
 494              		.fpu softvfp
 496              	HAL_ResumeTick:
 497              	.LFB52:
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief Resume Tick increment.
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is called, the the SysTick interrupt will be enabled and so Tick increment 
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is resumed.
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak  to be overwritten  in case of other
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_ResumeTick(void)
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 498              		.loc 1 402 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502              		@ link register save eliminated.
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Enable SysTick Interrupt */
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 503              		.loc 1 404 0
 504 0000 024A     		ldr	r2, .L42
 505 0002 1368     		ldr	r3, [r2]
 506 0004 0221     		movs	r1, #2
 507 0006 0B43     		orrs	r3, r1
 508 0008 1360     		str	r3, [r2]
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 509              		.loc 1 405 0
 510              		@ sp needed
 511 000a 7047     		bx	lr
 512              	.L43:
 513              		.align	2
 514              	.L42:
ARM GAS  /tmp/ccfeWloZ.s 			page 17


 515 000c 10E000E0 		.word	-536813552
 516              		.cfi_endproc
 517              	.LFE52:
 519              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 520              		.align	1
 521              		.global	HAL_GetHalVersion
 522              		.syntax unified
 523              		.code	16
 524              		.thumb_func
 525              		.fpu softvfp
 527              	HAL_GetHalVersion:
 528              	.LFB53:
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  This method returns the HAL revision
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval version 0xXYZR (8bits for each decimal, R for RC)
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 529              		.loc 1 412 0
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 0
 532              		@ frame_needed = 0, uses_anonymous_args = 0
 533              		@ link register save eliminated.
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  return __STM32F0xx_HAL_VERSION;
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 534              		.loc 1 414 0
 535 0000 0048     		ldr	r0, .L45
 536              		@ sp needed
 537 0002 7047     		bx	lr
 538              	.L46:
 539              		.align	2
 540              	.L45:
 541 0004 00030701 		.word	17236736
 542              		.cfi_endproc
 543              	.LFE53:
 545              		.section	.text.HAL_GetREVID,"ax",%progbits
 546              		.align	1
 547              		.global	HAL_GetREVID
 548              		.syntax unified
 549              		.code	16
 550              		.thumb_func
 551              		.fpu softvfp
 553              	HAL_GetREVID:
 554              	.LFB54:
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns the device revision identifier.
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device revision identifier
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetREVID(void)
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 555              		.loc 1 421 0
 556              		.cfi_startproc
 557              		@ args = 0, pretend = 0, frame = 0
 558              		@ frame_needed = 0, uses_anonymous_args = 0
 559              		@ link register save eliminated.
ARM GAS  /tmp/ccfeWloZ.s 			page 18


 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return((DBGMCU->IDCODE) >> 16U);
 560              		.loc 1 422 0
 561 0000 014B     		ldr	r3, .L48
 562 0002 1868     		ldr	r0, [r3]
 563 0004 000C     		lsrs	r0, r0, #16
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 564              		.loc 1 423 0
 565              		@ sp needed
 566 0006 7047     		bx	lr
 567              	.L49:
 568              		.align	2
 569              	.L48:
 570 0008 00580140 		.word	1073829888
 571              		.cfi_endproc
 572              	.LFE54:
 574              		.section	.text.HAL_GetDEVID,"ax",%progbits
 575              		.align	1
 576              		.global	HAL_GetDEVID
 577              		.syntax unified
 578              		.code	16
 579              		.thumb_func
 580              		.fpu softvfp
 582              	HAL_GetDEVID:
 583              	.LFB55:
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns the device identifier.
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetDEVID(void)
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 584              		.loc 1 430 0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 0
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 588              		@ link register save eliminated.
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 589              		.loc 1 431 0
 590 0000 024B     		ldr	r3, .L51
 591 0002 1868     		ldr	r0, [r3]
 592 0004 0005     		lsls	r0, r0, #20
 593 0006 000D     		lsrs	r0, r0, #20
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 594              		.loc 1 432 0
 595              		@ sp needed
 596 0008 7047     		bx	lr
 597              	.L52:
 598 000a C046     		.align	2
 599              	.L51:
 600 000c 00580140 		.word	1073829888
 601              		.cfi_endproc
 602              	.LFE55:
 604              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 605              		.align	1
 606              		.global	HAL_GetUIDw0
 607              		.syntax unified
 608              		.code	16
ARM GAS  /tmp/ccfeWloZ.s 			page 19


 609              		.thumb_func
 610              		.fpu softvfp
 612              	HAL_GetUIDw0:
 613              	.LFB56:
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns first word of the unique device identifier (UID based on 96 bits)
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 614              		.loc 1 439 0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 0
 617              		@ frame_needed = 0, uses_anonymous_args = 0
 618              		@ link register save eliminated.
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)UID_BASE)));
 619              		.loc 1 440 0
 620 0000 014B     		ldr	r3, .L54
 621 0002 1868     		ldr	r0, [r3]
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 622              		.loc 1 441 0
 623              		@ sp needed
 624 0004 7047     		bx	lr
 625              	.L55:
 626 0006 C046     		.align	2
 627              	.L54:
 628 0008 ACF7FF1F 		.word	536868780
 629              		.cfi_endproc
 630              	.LFE56:
 632              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 633              		.align	1
 634              		.global	HAL_GetUIDw1
 635              		.syntax unified
 636              		.code	16
 637              		.thumb_func
 638              		.fpu softvfp
 640              	HAL_GetUIDw1:
 641              	.LFB57:
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns second word of the unique device identifier (UID based on 96 bits)
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 642              		.loc 1 448 0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 0
 645              		@ frame_needed = 0, uses_anonymous_args = 0
 646              		@ link register save eliminated.
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 647              		.loc 1 449 0
 648 0000 014B     		ldr	r3, .L57
 649 0002 1868     		ldr	r0, [r3]
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 650              		.loc 1 450 0
ARM GAS  /tmp/ccfeWloZ.s 			page 20


 651              		@ sp needed
 652 0004 7047     		bx	lr
 653              	.L58:
 654 0006 C046     		.align	2
 655              	.L57:
 656 0008 B0F7FF1F 		.word	536868784
 657              		.cfi_endproc
 658              	.LFE57:
 660              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 661              		.align	1
 662              		.global	HAL_GetUIDw2
 663              		.syntax unified
 664              		.code	16
 665              		.thumb_func
 666              		.fpu softvfp
 668              	HAL_GetUIDw2:
 669              	.LFB58:
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns third word of the unique device identifier (UID based on 96 bits)
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 670              		.loc 1 457 0
 671              		.cfi_startproc
 672              		@ args = 0, pretend = 0, frame = 0
 673              		@ frame_needed = 0, uses_anonymous_args = 0
 674              		@ link register save eliminated.
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 675              		.loc 1 458 0
 676 0000 014B     		ldr	r3, .L60
 677 0002 1868     		ldr	r0, [r3]
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 678              		.loc 1 459 0
 679              		@ sp needed
 680 0004 7047     		bx	lr
 681              	.L61:
 682 0006 C046     		.align	2
 683              	.L60:
 684 0008 B4F7FF1F 		.word	536868788
 685              		.cfi_endproc
 686              	.LFE58:
 688              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 689              		.align	1
 690              		.global	HAL_DBGMCU_EnableDBGStopMode
 691              		.syntax unified
 692              		.code	16
 693              		.thumb_func
 694              		.fpu softvfp
 696              	HAL_DBGMCU_EnableDBGStopMode:
 697              	.LFB59:
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
ARM GAS  /tmp/ccfeWloZ.s 			page 21


 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 698              		.loc 1 466 0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 0
 701              		@ frame_needed = 0, uses_anonymous_args = 0
 702              		@ link register save eliminated.
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 703              		.loc 1 467 0
 704 0000 024A     		ldr	r2, .L63
 705 0002 5368     		ldr	r3, [r2, #4]
 706 0004 0221     		movs	r1, #2
 707 0006 0B43     		orrs	r3, r1
 708 0008 5360     		str	r3, [r2, #4]
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 709              		.loc 1 468 0
 710              		@ sp needed
 711 000a 7047     		bx	lr
 712              	.L64:
 713              		.align	2
 714              	.L63:
 715 000c 00580140 		.word	1073829888
 716              		.cfi_endproc
 717              	.LFE59:
 719              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 720              		.align	1
 721              		.global	HAL_DBGMCU_DisableDBGStopMode
 722              		.syntax unified
 723              		.code	16
 724              		.thumb_func
 725              		.fpu softvfp
 727              	HAL_DBGMCU_DisableDBGStopMode:
 728              	.LFB60:
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 729              		.loc 1 475 0
 730              		.cfi_startproc
 731              		@ args = 0, pretend = 0, frame = 0
 732              		@ frame_needed = 0, uses_anonymous_args = 0
 733              		@ link register save eliminated.
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 734              		.loc 1 476 0
 735 0000 024A     		ldr	r2, .L66
 736 0002 5368     		ldr	r3, [r2, #4]
 737 0004 0221     		movs	r1, #2
 738 0006 8B43     		bics	r3, r1
 739 0008 5360     		str	r3, [r2, #4]
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 740              		.loc 1 477 0
 741              		@ sp needed
 742 000a 7047     		bx	lr
 743              	.L67:
ARM GAS  /tmp/ccfeWloZ.s 			page 22


 744              		.align	2
 745              	.L66:
 746 000c 00580140 		.word	1073829888
 747              		.cfi_endproc
 748              	.LFE60:
 750              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 751              		.align	1
 752              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 753              		.syntax unified
 754              		.code	16
 755              		.thumb_func
 756              		.fpu softvfp
 758              	HAL_DBGMCU_EnableDBGStandbyMode:
 759              	.LFB61:
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 760              		.loc 1 484 0
 761              		.cfi_startproc
 762              		@ args = 0, pretend = 0, frame = 0
 763              		@ frame_needed = 0, uses_anonymous_args = 0
 764              		@ link register save eliminated.
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 765              		.loc 1 485 0
 766 0000 024A     		ldr	r2, .L69
 767 0002 5368     		ldr	r3, [r2, #4]
 768 0004 0421     		movs	r1, #4
 769 0006 0B43     		orrs	r3, r1
 770 0008 5360     		str	r3, [r2, #4]
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 771              		.loc 1 486 0
 772              		@ sp needed
 773 000a 7047     		bx	lr
 774              	.L70:
 775              		.align	2
 776              	.L69:
 777 000c 00580140 		.word	1073829888
 778              		.cfi_endproc
 779              	.LFE61:
 781              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 782              		.align	1
 783              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 784              		.syntax unified
 785              		.code	16
 786              		.thumb_func
 787              		.fpu softvfp
 789              	HAL_DBGMCU_DisableDBGStandbyMode:
 790              	.LFB62:
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
ARM GAS  /tmp/ccfeWloZ.s 			page 23


 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 791              		.loc 1 493 0
 792              		.cfi_startproc
 793              		@ args = 0, pretend = 0, frame = 0
 794              		@ frame_needed = 0, uses_anonymous_args = 0
 795              		@ link register save eliminated.
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 796              		.loc 1 494 0
 797 0000 024A     		ldr	r2, .L72
 798 0002 5368     		ldr	r3, [r2, #4]
 799 0004 0421     		movs	r1, #4
 800 0006 8B43     		bics	r3, r1
 801 0008 5360     		str	r3, [r2, #4]
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 802              		.loc 1 495 0
 803              		@ sp needed
 804 000a 7047     		bx	lr
 805              	.L73:
 806              		.align	2
 807              	.L72:
 808 000c 00580140 		.word	1073829888
 809              		.cfi_endproc
 810              	.LFE62:
 812              		.global	uwTickFreq
 813              		.global	uwTickPrio
 814              		.comm	uwTick,4,4
 815              		.section	.data.uwTickFreq,"aw",%progbits
 816              		.set	.LANCHOR0,. + 0
 819              	uwTickFreq:
 820 0000 01       		.byte	1
 821              		.section	.data.uwTickPrio,"aw",%progbits
 822              		.align	2
 823              		.set	.LANCHOR1,. + 0
 826              	uwTickPrio:
 827 0000 04000000 		.word	4
 828              		.text
 829              	.Letext0:
 830              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 831              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 832              		.file 4 "Drivers/CMSIS/Include/core_cm0.h"
 833              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 834              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x8.h"
 835              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 836              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 837              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
ARM GAS  /tmp/ccfeWloZ.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_hal.c
     /tmp/ccfeWloZ.s:16     .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccfeWloZ.s:23     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccfeWloZ.s:38     .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/ccfeWloZ.s:45     .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/ccfeWloZ.s:59     .text.HAL_DeInit:0000000000000000 $t
     /tmp/ccfeWloZ.s:66     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/ccfeWloZ.s:103    .text.HAL_DeInit:0000000000000020 $d
     /tmp/ccfeWloZ.s:109    .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccfeWloZ.s:116    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccfeWloZ.s:177    .text.HAL_InitTick:0000000000000044 $d
     /tmp/ccfeWloZ.s:184    .text.HAL_Init:0000000000000000 $t
     /tmp/ccfeWloZ.s:191    .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/ccfeWloZ.s:222    .text.HAL_Init:000000000000001c $d
     /tmp/ccfeWloZ.s:227    .text.HAL_IncTick:0000000000000000 $t
     /tmp/ccfeWloZ.s:234    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/ccfeWloZ.s:254    .text.HAL_IncTick:0000000000000010 $d
                            *COM*:0000000000000004 uwTick
     /tmp/ccfeWloZ.s:260    .text.HAL_GetTick:0000000000000000 $t
     /tmp/ccfeWloZ.s:267    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/ccfeWloZ.s:283    .text.HAL_GetTick:0000000000000008 $d
     /tmp/ccfeWloZ.s:288    .text.HAL_GetTickPrio:0000000000000000 $t
     /tmp/ccfeWloZ.s:295    .text.HAL_GetTickPrio:0000000000000000 HAL_GetTickPrio
     /tmp/ccfeWloZ.s:311    .text.HAL_GetTickPrio:0000000000000008 $d
     /tmp/ccfeWloZ.s:316    .text.HAL_SetTickFreq:0000000000000000 $t
     /tmp/ccfeWloZ.s:323    .text.HAL_SetTickFreq:0000000000000000 HAL_SetTickFreq
     /tmp/ccfeWloZ.s:369    .text.HAL_SetTickFreq:0000000000000024 $d
     /tmp/ccfeWloZ.s:375    .text.HAL_GetTickFreq:0000000000000000 $t
     /tmp/ccfeWloZ.s:382    .text.HAL_GetTickFreq:0000000000000000 HAL_GetTickFreq
     /tmp/ccfeWloZ.s:398    .text.HAL_GetTickFreq:0000000000000008 $d
     /tmp/ccfeWloZ.s:403    .text.HAL_Delay:0000000000000000 $t
     /tmp/ccfeWloZ.s:410    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/ccfeWloZ.s:453    .text.HAL_Delay:0000000000000020 $d
     /tmp/ccfeWloZ.s:458    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccfeWloZ.s:465    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccfeWloZ.s:484    .text.HAL_SuspendTick:000000000000000c $d
     /tmp/ccfeWloZ.s:489    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccfeWloZ.s:496    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccfeWloZ.s:515    .text.HAL_ResumeTick:000000000000000c $d
     /tmp/ccfeWloZ.s:520    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/ccfeWloZ.s:527    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/ccfeWloZ.s:541    .text.HAL_GetHalVersion:0000000000000004 $d
     /tmp/ccfeWloZ.s:546    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/ccfeWloZ.s:553    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/ccfeWloZ.s:570    .text.HAL_GetREVID:0000000000000008 $d
     /tmp/ccfeWloZ.s:575    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/ccfeWloZ.s:582    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/ccfeWloZ.s:600    .text.HAL_GetDEVID:000000000000000c $d
     /tmp/ccfeWloZ.s:605    .text.HAL_GetUIDw0:0000000000000000 $t
     /tmp/ccfeWloZ.s:612    .text.HAL_GetUIDw0:0000000000000000 HAL_GetUIDw0
     /tmp/ccfeWloZ.s:628    .text.HAL_GetUIDw0:0000000000000008 $d
     /tmp/ccfeWloZ.s:633    .text.HAL_GetUIDw1:0000000000000000 $t
     /tmp/ccfeWloZ.s:640    .text.HAL_GetUIDw1:0000000000000000 HAL_GetUIDw1
     /tmp/ccfeWloZ.s:656    .text.HAL_GetUIDw1:0000000000000008 $d
     /tmp/ccfeWloZ.s:661    .text.HAL_GetUIDw2:0000000000000000 $t
     /tmp/ccfeWloZ.s:668    .text.HAL_GetUIDw2:0000000000000000 HAL_GetUIDw2
ARM GAS  /tmp/ccfeWloZ.s 			page 25


     /tmp/ccfeWloZ.s:684    .text.HAL_GetUIDw2:0000000000000008 $d
     /tmp/ccfeWloZ.s:689    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/ccfeWloZ.s:696    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/ccfeWloZ.s:715    .text.HAL_DBGMCU_EnableDBGStopMode:000000000000000c $d
     /tmp/ccfeWloZ.s:720    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/ccfeWloZ.s:727    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccfeWloZ.s:746    .text.HAL_DBGMCU_DisableDBGStopMode:000000000000000c $d
     /tmp/ccfeWloZ.s:751    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/ccfeWloZ.s:758    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccfeWloZ.s:777    .text.HAL_DBGMCU_EnableDBGStandbyMode:000000000000000c $d
     /tmp/ccfeWloZ.s:782    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/ccfeWloZ.s:789    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccfeWloZ.s:808    .text.HAL_DBGMCU_DisableDBGStandbyMode:000000000000000c $d
     /tmp/ccfeWloZ.s:819    .data.uwTickFreq:0000000000000000 uwTickFreq
     /tmp/ccfeWloZ.s:826    .data.uwTickPrio:0000000000000000 uwTickPrio
     /tmp/ccfeWloZ.s:822    .data.uwTickPrio:0000000000000000 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
